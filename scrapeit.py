from flask import Flask, send_from_directory
from api import auth, account
import os
import properties
import database as db

app = Flask(__name__)

# This hook ensures that a connection is opened to handle any queries
# generated by the request.
# These hooks are called on every single request.  Probably not an
# appropriate method for handling connection pooling...
@app.before_request
def _db_connect():
    print("opening DB pool connection.")
    db.myDB.connect()

# This hook ensures that the connection is closed when we've finished
# processing the request.
@app.teardown_request
def _db_close(exc):
    if not db.myDB.is_closed():
        print("closing DB pool connection.")
        db.myDB.close()

@app.route("/")
def main():
    return send_from_directory("static/", "index.html")

PORT = int(os.getenv('PORT', properties.d["port"]))

if __name__ == '__main__':
    
    app.register_blueprint(auth.auth_api)
    app.register_blueprint(account.account_api)
    app.run(debug=properties.d["debug"], host=properties.d["host"], port=PORT)